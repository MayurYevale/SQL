

Simple case expression

select Employeeid, job_id, salary,
Case Job_id
    When 'IT_REP' then salary+500
    When 'SALES_REP' then salary+800
Else     salary
End as cal_salary
from Employee

Searched case Expr

select Employeeid, job_id, salary,
Case 
    When job_id='IT_REP' then salary+500
    When job_id='SALES_REP' and salary < 51000 then salary+800
Else 
    salary
End as updated_salary
from Employee


Update employee
set salary = ( Case When job_id='IT_REP' then salary+500
                    When job_id='SALES_REP' and salary < 51000 then salary+800
              Else 
                      salary
              End )
              
     



Employeeid, firstname, lastname, manager_id, salary, job_id, department_name

select * from Department

select * from employee

select * from location_dtls

--Inner join

select
Employeeid, firstname, lastname, manager_id, salary, job_id,
  Employee.department_id, department_name
from Employee, Department
Where Employee.department_id= Department.department_id

-- table alais

Syntax 1

select
Employeeid, firstname, lastname, manager_id, salary, job_id, E.department_id, department_name
From Employee E, Department D
Where E.Department_id=D.Department_id
and D.department_id=10

select
E.Employeeid, E.firstname, E.lastname, 
E.manager_id, E.salary, E.job_id, D.department_name,
L.city
From Employee E, Department D, Location_dtls L
Where E.Department_id=D.Department_id
and D.locationid=L.locationid

--and d.department_id=20

2 tables - 1 join condition
3 tables - 2 join conditions
n number of tables - n-1 join conditions


-- ANSI standard

select
Employeeid, firstname, lastname, manager_id, salary, 
job_id, d.department_id, department_name
From Employee E JOIN Department D
ON E.Department_id=D.Department_id
Where E.department_id in (10,30,50)

select * from department

select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name, city
From Employee E 
JOIN Department D
ON E.Department_id=D.Department_id
JOIN Location_dtls L
ON D.locationid=L.locationid

select * From location_Dtls

select * From department

select * from Employee


-- Cartesian product

select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name
From Employee, Department


Emp 9
Dept 5
Output 9 * 5 = 45

/*
select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name
From Employee E CROSS JOIN Department D*/

-- Natural join ( Inner Join only)

select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name
From Employee E NATURAL JOIN Department D

 - it will check for common column between the tables with same name 
 and same datatype. Automatically join will be performed based on that col


select * From Employee

select * From department

select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name
From Employee E JOIN Department D
ON E.Department_id=D.Department_id


select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name
From Employee E LEFT OUTER JOIN Department D
ON E.Department_id=D.Department_id

select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name
From Employee E RIGHT OUTER JOIN Department D
ON E.Department_id=D.Department_id

select
Employeeid, firstname, lastname, manager_id, salary, job_id, department_name
From Employee E Full OUTER JOIN Department D
ON E.Department_id=D.Department_id    


select * From categories

select * From products

select c.categoryname, p.productname
from categories c left outer join products p
on c.categoryid=p.categoryid

select c.categoryname, p.productname
from categories c right outer join products p
on c.categoryid=p.categoryid

select * from Employee

Empid	Name	  Managerid
	1	    AAA       null
	2	    Matin     1
  3	    Kalyani		2

select 
Emp.employeeid, Emp.firstname, Emp.salary, Emp.job_id,
Mgr.employeeid as Manager_id, Mgr.firstname as managerName
from Employee Emp, Employee Mgr
Where Emp.manager_id=Mgr.Employeeid


select 
Emp.employeeid, 
Emp.firstname, 
Emp.salary, 
Emp.job_id,
Mgr.employeeid as Manager_id, Mgr.firstname as managerName
from Employee Emp JOIN Employee Mgr
ON Emp.manager_id=Mgr.Employeeid

select 
Emp.employeeid, 
Emp.firstname, 
Emp.salary, 
Emp.job_id,
Mgr.employeeid as Manager_id, Mgr.firstname as managerName
from Employee Emp Left OUTER Join Employee Mgr
On Emp.manager_id=Mgr.Employeeid

 
  
select employeeid, job_id From Employee
UNION ALL
select employeeid, job_id from Emphistory


select * from Emphistory

select employeeid, job_id From Employee
UNION
select employeeid, job_id from Emphistory

select employeeid, job_id From Employee
INTERSECT
select employeeid, job_id from Emphistory

All the employees who never changed their department or job_id

select employeeid From Employee
MINUS
select employeeid from Emphistory

select employeeid from Emphistory
Minus
select employeeid From Employee


Grant select on products to db_user
  
Grant select on location_dtls to db_user1 with grant option

select * From user_tab_privs_made

select * From user_tab_privs_recd



Create Role Role5

Grant select on Employee to Role5;
Grant select , insert on Department to Role5;
Grant select,update on products to Role5;


select * From role_tab_privs

select * from user_sys_privs

select * From role_tab_privs